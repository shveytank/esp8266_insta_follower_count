#include "InstagramStats.h"
#include <ESP8266WiFi.h>
#include <WiFiClientSecure.h>
#include "JsonStreamingParser.h"
#include <Adafruit_GFX.h>      // include Adafruit graphics library
#include <Adafruit_ST7735.h>   // include Adafruit ST7735 TFT library

// ST7735 TFT module connections
#define TFT_RST   D4     // TFT RST pin is connected to NodeMCU pin D4 (GPIO2)
#define TFT_CS    D3     // TFT CS  pin is connected to NodeMCU pin D4 (GPIO0)
#define TFT_DC    D2     // TFT DC  pin is connected to NodeMCU pin D4 (GPIO4)

Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);

//------- Replace the following! ------
char ssid[] = "xxxxxxxxx";         // your network SSID (name)
char password[] = "xxxxxxxxxx"; // your network key

WiFiClientSecure client;
InstagramStats instaStats(client);

unsigned long delayBetweenChecks = 10000; //mean time between api requests
unsigned long whenDueToCheck = 0;

//Inputs
String userName = "insta_user_name"; // from their instagram url https://www.instagram.com/electronicguru007

const unsigned char insta[] PROGMEM = {
  B00000000,B00001111,B11111111,B11111111,B11111100,B00000000,B00000000,
  B00000000,B11111111,B11111111,B11111111,B11111111,B11000000,B00000000,
  B00000011,B11111111,B11111111,B11111111,B11111111,B11110000,B00000000,
  B00000111,B11111111,B11111111,B11111111,B11111111,B11111000,B00000000,
  B00001111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,
  B00011111,B11000000,B00000000,B00000000,B00000000,B11111110,B00000000,
  B00111111,B00000000,B00000000,B00000000,B00000000,B00111111,B00000000,
  B00111110,B00000000,B00000000,B00000000,B00000000,B00011111,B00000000,
  B01111100,B00000000,B00000000,B00000000,B00000000,B00001111,B10000000,
  B01111100,B00000000,B00000000,B00000000,B00001111,B00001111,B10000000,
  B01111000,B00000000,B00000000,B00000000,B00001111,B10000111,B10000000,
  B01111000,B00000000,B00000000,B00000000,B00011111,B10000111,B10000000,
  B11111000,B00000000,B00000011,B11110000,B00011111,B10000111,B11000000,
  B11111000,B00000000,B00011111,B11111110,B00001111,B10000111,B11000000,
  B11111000,B00000000,B00111111,B11111111,B00000110,B00000111,B11000000,
  B11111000,B00000000,B11111111,B11111111,B11000000,B00000111,B11000000,
  B11111000,B00000001,B11111111,B11111111,B11100000,B00000111,B11000000,
  B11111000,B00000001,B11111000,B00000111,B11100000,B00000111,B11000000,
  B11111000,B00000011,B11110000,B00000011,B11110000,B00000111,B11000000,
  B11111000,B00000111,B11100000,B00000001,B11111000,B00000111,B11000000,
  B11111000,B00000111,B11000000,B00000000,B11111000,B00000111,B11000000,
  B11111000,B00000111,B10000000,B00000000,B01111000,B00000111,B11000000,
  B11111000,B00001111,B10000000,B00000000,B01111100,B00000111,B11000000,
  B11111000,B00001111,B10000000,B00000000,B01111100,B00000111,B11000000,
  B11111000,B00001111,B10000000,B00000000,B01111100,B00000111,B11000000,
  B11111000,B00001111,B10000000,B00000000,B01111100,B00000111,B11000000,
  B11111000,B00001111,B10000000,B00000000,B01111100,B00000111,B11000000,
  B11111000,B00001111,B10000000,B00000000,B01111100,B00000111,B11000000,
  B11111000,B00000111,B10000000,B00000000,B01111000,B00000111,B11000000,
  B11111000,B00000111,B11000000,B00000000,B11111000,B00000111,B11000000,
  B11111000,B00000111,B11100000,B00000001,B11111000,B00000111,B11000000,
  B11111000,B00000011,B11110000,B00000011,B11110000,B00000111,B11000000,
  B11111000,B00000001,B11111000,B00000111,B11100000,B00000111,B11000000,
  B11111000,B00000001,B11111111,B11111111,B11100000,B00000111,B11000000,
  B11111000,B00000000,B11111111,B11111111,B11000000,B00000111,B11000000,
  B11111000,B00000000,B00111111,B11111111,B00000000,B00000111,B11000000,
  B11111000,B00000000,B00011111,B11111110,B00000000,B00000111,B11000000,
  B11111000,B00000000,B00000011,B11110000,B00000000,B00000111,B11000000,
  B01111000,B00000000,B00000000,B00000000,B00000000,B00000111,B10000000,
  B01111000,B00000000,B00000000,B00000000,B00000000,B00000111,B10000000,
  B01111100,B00000000,B00000000,B00000000,B00000000,B00001111,B10000000,
  B01111100,B00000000,B00000000,B00000000,B00000000,B00001111,B10000000,
  B00111110,B00000000,B00000000,B00000000,B00000000,B00011111,B00000000,
  B00111111,B00000000,B00000000,B00000000,B00000000,B00111111,B00000000,
  B00011111,B11000000,B00000000,B00000000,B00000000,B11111110,B00000000,
  B00001111,B11111111,B11111111,B11111111,B11111111,B11111100,B00000000,
  B00000111,B11111111,B11111111,B11111111,B11111111,B11111000,B00000000,
  B00000011,B11111111,B11111111,B11111111,B11111111,B11110000,B00000000,
  B00000000,B11111111,B11111111,B11111111,B11111111,B11000000,B00000000,
  B00000000,B00001111,B11111111,B11111111,B11111100,B00000000,B00000000
};

int i=0;
void setup()
{

  Serial.begin(115200);

  // Set WiFi to station mode and disconnect from an AP if it was Previously
  // connected
  WiFi.mode(WIFI_STA);
  WiFi.disconnect();
  delay(100);

  // Attempt to connect to Wifi network:
  Serial.print("Connecting Wifi: ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED)
  {
    Serial.print(".");
    delay(500);
  }
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  IPAddress ip = WiFi.localIP();
  Serial.println(ip);
  tft.initR(INITR_BLACKTAB);   // initialize a ST7735S chip, black tab
  tft.setRotation(1);
  // If using ESP8266 Core 2.5 RC, uncomment the following
   client.setInsecure();
   tft.fillScreen(ST7735_BLACK);
}

void getInstagramStatsForUser()
{
  Serial.println("Getting instagram user stats for " + userName);
  InstagramUserStats response = instaStats.getUserStats(userName);
  Serial.println("Response:");
  Serial.print("Number of followers: ");
  Serial.println(response.followedByCount);
  tft.fillScreen(ST7735_BLACK);
   tft.drawBitmap(55, 20, insta, 50, 50,ST7735_RED);
  tft.setTextSize(1);
  tft.setCursor(29,80);
    tft.print(userName);
    tft.setTextSize(2);
   tft.setCursor(67,100);
   
    tft.print(response.followedByCount);
    
}

void loop()
{
  unsigned long timeNow = millis();
  if ((timeNow > whenDueToCheck))
  {
    getInstagramStatsForUser();
    i++;
    whenDueToCheck = timeNow + delayBetweenChecks;
  }
}
